/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndOverwrite.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <gui/containers/ContainerLoadingAnimation.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/ContainerPopup.hpp>
#include <gui/containers/ContainerLOFFMatrix.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void StopData()
    {
        // Override and implement this function in Screen1
    }

    virtual void AjusteEscala()
    {
        // Override and implement this function in Screen1
    }

    virtual void NextDeriv()
    {
        // Override and implement this function in Screen1
    }

    virtual void BackDeriv()
    {
        // Override and implement this function in Screen1
    }

    virtual void WifiECG()
    {
        // Override and implement this function in Screen1
    }

    virtual void FechaPopup()
    {
        // Override and implement this function in Screen1
    }

    virtual void FechaPopup1()
    {
        // Override and implement this function in Screen1
    }

    virtual void FechaStatLead()
    {
        // Override and implement this function in Screen1
    }

    virtual void AbreStatLead()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::GraphWrapAndOverwrite<800> dynamicGraph1;
    touchgfx::GraphElementLine dynamicGraph1Line1;
    touchgfx::PainterRGB565 dynamicGraph1Line1Painter;
    touchgfx::GraphElementGridX dynamicGraph1MinorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph1MinorYAxisGrid;
    touchgfx::GraphElementGridX dynamicGraph1MajorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph1MajorYAxisGrid;
    touchgfx::Box box3;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextAreaWithOneWildcard textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::TextArea textArea4;
    touchgfx::TextArea textArea6;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::ScalableImage scalableImage3;
    touchgfx::ScalableImage scalableImage4;
    touchgfx::ScalableImage scalableImage5;
    touchgfx::ScalableImage scalableImage6;
    touchgfx::Button voltar;
    touchgfx::ButtonWithIcon ConfigExame;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::TextArea textoffset;
    touchgfx::ButtonWithIcon buttonNextDeriv;
    touchgfx::ButtonWithIcon buttoBackDeriv;
    touchgfx::ButtonWithLabel buttonTransmit;
    touchgfx::ScalableImage scalableImage4_1;
    ContainerLoadingAnimation containerLoadingAnimation1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > buttonFechaPopup;
    touchgfx::ButtonWithIcon buttonFechaPopup1;
    touchgfx::ScalableImage scalableImage9;
    touchgfx::ScalableImage scalableImage8;
    ContainerPopup containerPopup1;
    touchgfx::ButtonWithIcon buttonOpenStatLead;
    ContainerLOFFMatrix containerLOFFMatrix1;
    touchgfx::ButtonWithIcon buttonFechaStatLead;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 12;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t TEXTAREA2_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SCREEN1VIEWBASE_HPP
