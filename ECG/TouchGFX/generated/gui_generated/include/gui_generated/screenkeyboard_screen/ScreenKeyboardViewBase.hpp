/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENKEYBOARDVIEWBASE_HPP
#define SCREENKEYBOARDVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenkeyboard_screen/ScreenKeyboardPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <gui/containers/ContainerLoadingAnimation.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/ContainerPopup.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>

class ScreenKeyboardViewBase : public touchgfx::View<ScreenKeyboardPresenter>
{
public:
    ScreenKeyboardViewBase();
    virtual ~ScreenKeyboardViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void getBuffer()
    {
        // Override and implement this function in ScreenKeyboard
    }

    virtual void FechaPopup()
    {
        // Override and implement this function in ScreenKeyboard
    }

    virtual void FechaPopup1()
    {
        // Override and implement this function in ScreenKeyboard
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Button voltar;
    touchgfx::ButtonWithLabel buttonSalvarPassword;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextArea textArea2;
    ContainerLoadingAnimation containerLoadingAnimation1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > buttonFecharPopup1;
    ContainerPopup containerPopup1;
    touchgfx::ButtonWithIcon buttonFecharPopup;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 30;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenKeyboardViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ScreenKeyboardViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREENKEYBOARDVIEWBASE_HPP
