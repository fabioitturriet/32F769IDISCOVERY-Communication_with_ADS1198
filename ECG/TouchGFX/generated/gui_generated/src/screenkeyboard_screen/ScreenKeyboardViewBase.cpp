/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenkeyboard_screen/ScreenKeyboardViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenKeyboardViewBase::ScreenKeyboardViewBase() :
    buttonCallback(this, &ScreenKeyboardViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ScreenKeyboardViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(20, 61, 89));

    voltar.setXY(12, 10);
    voltar.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_EDIT_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_EDIT_ID));
    voltar.setAction(buttonCallback);

    buttonSalvarPassword.setXY(625, 415);
    buttonSalvarPassword.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
    buttonSalvarPassword.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HKYG));
    buttonSalvarPassword.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSalvarPassword.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSalvarPassword.setAction(buttonCallback);

    textArea1.setPosition(25, 85, 700, 35);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1Buffer[0] = 0;
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N43D));

    textArea2.setXY(25, 188);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L09I));

    containerLoadingAnimation1.setXY(679, 337);
    containerLoadingAnimation1.setVisible(false);

    buttonFecharPopup1.setBoxWithBorderPosition(0, 0, 800, 480);
    buttonFecharPopup1.setBorderSize(5);
    buttonFecharPopup1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    buttonFecharPopup1.setPosition(0, 0, 800, 480);
    buttonFecharPopup1.setVisible(false);
    buttonFecharPopup1.setAlpha(0);
    buttonFecharPopup1.setAction(flexButtonCallback);

    containerPopup1.setXY(0, 0);
    containerPopup1.setVisible(false);

    buttonFecharPopup.setXY(601, 110);
    buttonFecharPopup.setVisible(false);
    buttonFecharPopup.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
    buttonFecharPopup.setIconXY(1, 1);
    buttonFecharPopup.setAction(buttonCallback);

    add(__background);
    add(box1);
    add(voltar);
    add(buttonSalvarPassword);
    add(textArea1);
    add(textArea2);
    add(containerLoadingAnimation1);
    add(buttonFecharPopup1);
    add(containerPopup1);
    add(buttonFecharPopup);
}

void ScreenKeyboardViewBase::setupScreen()
{
    containerLoadingAnimation1.initialize();
    containerPopup1.initialize();
}

void ScreenKeyboardViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &voltar)
    {
        //ButtonVoltar
        //When voltar clicked change screen to Cadastro
        //Go to Cadastro with no screen transition
        application().gotoCadastroScreenNoTransition();
    }
    else if (&src == &buttonSalvarPassword)
    {
        //InteractionButtonSalvar
        //When buttonSalvarPassword clicked call virtual function
        //Call getBuffer
        getBuffer();
    }
    else if (&src == &buttonFecharPopup)
    {
        //FechaJanelaPopup
        //When buttonFecharPopup clicked call virtual function
        //Call FechaPopup
        FechaPopup();
    }
}

void ScreenKeyboardViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &buttonFecharPopup1)
    {
        //FechaJanelaPopup1
        //When buttonFecharPopup1 clicked call virtual function
        //Call FechaPopup1
        FechaPopup1();
    }
}
