/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/configuracoes_sdcard_screen/Configuracoes_SDCardViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <BitmapDatabase.hpp>

Configuracoes_SDCardViewBase::Configuracoes_SDCardViewBase() :
    buttonCallback(this, &Configuracoes_SDCardViewBase::buttonCallbackHandler),
    updateItemCallback(this, &Configuracoes_SDCardViewBase::updateItemCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(20, 61, 89));

    textArea.setXY(273, 10);
    textArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea.setLinespacing(0);
    textArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CRG0));

    barra_divisoria.setPosition(21, 80, 775, 2);
    barra_divisoria.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    voltar.setXY(12, 10);
    voltar.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_EDIT_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_EDIT_ID));
    voltar.setAction(buttonCallback);

    scrollList2.setPosition(37, 99, 400, 357);
    scrollList2.setHorizontal(false);
    scrollList2.setCircular(false);
    scrollList2.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollList2.setSwipeAcceleration(10);
    scrollList2.setDragAcceleration(10);
    scrollList2.setNumberOfItems(0);
    scrollList2.setPadding(0, 0);
    scrollList2.setSnapping(false);
    scrollList2.setDrawableSize(40, 0);
    scrollList2.setDrawables(scrollList2ListItems, updateItemCallback);

    textArea1_1.setPosition(445, 136, 351, 37);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1Buffer[0] = 0;
    textArea1_1.setWildcard(textArea1_1Buffer);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CFQJ));

    textArea1.setXY(445, 99);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MY2A));

    buttonWithLabel1.setXY(609, 396);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_1PNT));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));

    containerLoadingAnimation1.setXY(540, 396);
    containerLoadingAnimation1.setVisible(false);

    add(__background);
    add(box1);
    add(textArea);
    add(barra_divisoria);
    add(voltar);
    add(scrollList2);
    add(textArea1_1);
    add(textArea1);
    add(buttonWithLabel1);
    add(containerLoadingAnimation1);
}

void Configuracoes_SDCardViewBase::setupScreen()
{
    scrollList2.initialize();
    for (int i = 0; i < scrollList2ListItems.getNumberOfDrawables(); i++)
    {
        scrollList2ListItems[i].initialize();
    }
    containerLoadingAnimation1.initialize();
}

void Configuracoes_SDCardViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &voltar)
    {
        //InteractionVoltar
        //When voltar clicked change screen to Configuracoes
        //Go to Configuracoes with no screen transition
        application().gotoConfiguracoesScreenNoTransition();
    }
}

void Configuracoes_SDCardViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollList2ListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        ContainerConexaoWIFI* cc = (ContainerConexaoWIFI*)d;
        scrollList2UpdateItem(*cc, itemIndex);
    }
}
